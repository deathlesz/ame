name: Run clippy, build & test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    name: Clippy, build & test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-dev libclang-dev clang

    - name: Install LLVM (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install llvm
        echo "export PATH=\"/opt/homebrew/opt/llvm/bin:\$PATH\"" >> $GITHUB_ENV
        echo "export LIBCLANG_PATH=\"/opt/homebrew/opt/llvm/lib\"" >> $GITHUB_ENV
        echo "export LLVM_SYS_181_PREFIX=\"/opt/homebrew/opt/llvm\"" >> $GITHUB_ENV

    - name: Install LLVM (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        choco install llvm -y
        echo "LLVM_SYS_181_PREFIX=C:\Program Files\LLVM" >> $env:GITHUB_ENV

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: clippy

    - name: Run Clippy
      run: cargo clippy --all-targets -- -D warnings

    - name: Run Tests
      run: cargo test --verbose

    - name: Build
      run: cargo build --release
